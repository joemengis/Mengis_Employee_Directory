{"version":3,"sources":["reducers/employees.js","store/store.js","actions/employees.js","components/EmployeeItem.js","components/EmployeeList.js","components/Header.js","components/Filters.js","components/HomePage.js","index.js"],"names":["employeesReducer","state","action","type","employees","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","setEmployees","EmployeeItem","name","email","country","photo","gender","age","Card","className","Img","variant","src","alt","Body","Title","Text","EmployeesList","isLoading","Fragment","map","employee","index","key","Header","handleSearch","placeholder","onChange","Filters","handleSort","sortOrder","value","options","label","connect","props","useState","setSortOrder","setIsLoading","inputRef","useRef","onSearchText","text","filtered","filter","toLowerCase","includes","useEffect","dispatch","a","axios","get","console","log","data","current","_","debounce","length","event","target","orderBy","EmployeeList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.772de80d.chunk.js","sourcesContent":["const employeesReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_EMPLOYEES':\n        return [...state, ...action.employees];\n      default:\n        return state;\n    }\n  };\n  \n  export default employeesReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport employeesReducer from '../reducers/employees';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  combineReducers({\n    employees: employeesReducer\n  }),\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;","import axios from 'axios';\n\nexport const loadEmployees = () => {\n  return async (dispatch) => {\n    try {\n      const employees = await axios.get('./employees.json');\n      console.log(\"employees are\", employees.data);\n      return dispatch(setEmployees(employees.data));\n      \n    } catch (error) {\n      console.log('error:', error);\n    }\n  };\n};\n\nexport const setEmployees = (employees) => ({\n  type: 'SET_EMPLOYEES',\n  employees\n});","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nconst EmployeeItem = ({ name, email, country, photo, gender, age }) => {\n  return (\n    <Card className=\"employee\">\n      <Card.Img variant=\"top\" src={photo} className=\"employee__image\" alt={name} />\n      <Card.Body>\n        <Card.Title className=\"employee__name\">{name}</Card.Title>\n        <Card.Text className=\"employee__details\">\n          <span>\n            <strong>Email:</strong> {email}\n          </span>\n          <span>\n            <strong>Country:</strong> {country}\n          </span>\n          <span>\n            <strong>Gender:</strong> {gender}\n          </span>\n          <span>\n            <strong>Age:</strong> {age}\n          </span>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default EmployeeItem;","import React from 'react';\nimport EmployeeItem from './EmployeeItem';\n\nconst EmployeesList = ({ employees, isLoading }) => {\n  return (\n    <div className=\"employees-list\">\n      {isLoading ? (\n        <p className=\"loading\">Loading...</p>\n      ) : (\n        <React.Fragment>\n          {employees.map((employee, index) => (\n            <EmployeeItem key={index} {...employee} />\n          ))}\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default EmployeesList;","import React from 'react';\n\nconst Header = ({ handleSearch }) => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__title\">Employee Search App</div>\n      <div className=\"header__search\">\n        <input\n          type=\"search\"\n          placeholder=\"Search employees by country\"\n          onChange={handleSearch}\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport Select from 'react-select';\n\nconst Filters = ({ handleSort, sortOrder }) => {\n  const options = [\n    { value: '', label: 'None' },\n    { value: 'asc', label: 'Ascending' },\n    { value: 'desc', label: 'Descending' }\n  ];\n\n  return (\n    <div className=\"sortBy\">\n      Sort by Name\n      <Select\n        value={sortOrder}\n        className=\"select-filter\"\n        onChange={handleSort}\n        options={options}\n      />\n    </div>\n  );\n};\n\nexport default Filters;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { loadEmployees } from '../actions/employees';\nimport EmployeeList from './EmployeeList';\nimport Header from './Header';\nimport Filters from './Filters';\n\nconst HomePage = (props) => {\n  const [employees, setEmployees] = useState(props.employees);\n  const [sortOrder, setSortOrder] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const inputRef = useRef();\n\n  // call api to get list of users\n  useEffect(() => {\n    setIsLoading(true);\n    props.dispatch(loadEmployees());\n\n    // initialize debounce function to search once user has stopped typing every half second\n    inputRef.current = _.debounce(onSearchText, 500);\n  }, []);\n\n  useEffect(() => {\n    if (props.employees.length > 0) {\n      setEmployees(props.employees);\n      setIsLoading(false);\n    }\n  }, [props.employees]);\n\n  function onSearchText(text, props) {\n    let filtered;\n    if (text) {\n      filtered = props.employees.filter((employee) =>\n        employee.country.toLowerCase().includes(text.toLowerCase())\n      );\n    } else {\n      filtered = props.employees;\n    }\n    setEmployees(filtered);\n    setSortOrder('');\n  }\n\n  function handleSearch(event) {\n    inputRef.current(event.target.value, props);\n  }\n\n  function handleSortName(sortOrder) {\n      setSortOrder(sortOrder);\n      if (sortOrder.value) {\n          setEmployees(_.orderBy(employees, ['name'], [sortOrder.value]));\n      }\n  }\n\n  return (\n    <React.Fragment>\n      <Header handleSearch={handleSearch} />\n      <Filters handleSort={handleSortName} sortOrder={sortOrder} />\n      <EmployeeList employees={employees} isLoading={isLoading} />\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees\n});\n\nexport default connect(mapStateToProps)(HomePage);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport HomePage from './components/HomePage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/style.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HomePage />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}